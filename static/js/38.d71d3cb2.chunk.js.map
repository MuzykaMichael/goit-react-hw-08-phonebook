{"version":3,"file":"static/js/38.d71d3cb2.chunk.js","mappings":"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","sources":["components/Form/Form.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/Form/Form.jsx","components/ListContacts/ListContacts.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ListContacts/ListContacts.jsx","components/Filtration/Filtration.jsx","components/App.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\n\nexport const Forma = styled.form`\n\n`;\n\nexport const Label = styled.label`\n\n`;\n\nexport const Input = styled.input`\n\n`;\n\nexport const BtnSubmit = styled.button`\n\n`;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts= state => state.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectVisibleContacts = createSelector(\n    [ selectContacts, selectFilter],\n     (contacts, filter) => {\n       return contacts.items.filter(item => item.name.toLowerCase()\n        .includes(filter.filter.toLowerCase()))\n     }\n    )\n\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","import { useState } from \"react\";\nimport { Forma, Label, Input, BtnSubmit } from \"./Form.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/operations\";\nimport { selectContacts } from \"redux/selectors\";\n\nexport const Form =()=>{\n    const [name,setName] = useState(\"\");\n    const [number,setNumber] = useState(\"\");\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts)\n\n    const formChangeName = evt => {\n        const {value} = evt.target;\n        setName(value)\n    };\n    const formChangeNumber = evt => {\n        const {value} = evt.target;\n        setNumber(value);\n    }\n    const onSubmit = newContact =>{\n        const sameContact = contacts.items.find(\n            ({name,number})=>name.toLowerCase()===newContact.name.toLowerCase() || number===newContact.number\n          );\n          if (sameContact) {\n            alert(`${newContact.name} or ${newContact.number} is already exists.`)\n            return\n          }\n          dispatch(addContact(newContact))\n    }\n    const formSubmit = evt =>{\n        evt.preventDefault();\n        const contact = {name,number};\n        onSubmit(contact);\n        clear();\n    }\n\n    const clear = () => {\n        setName(\"\");\n        setNumber(\"\");\n    };\n\n        return(\n            <Forma onSubmit={formSubmit}>\n                <Label>Name\n                    <Input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"input-name\"\n                    value={name}\n                    required\n                    onChange={formChangeName}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    />\n                </Label>\n                <Label>\n                    Number\n                    <Input\n                    type=\"tel\"\n                    name=\"number\"\n                    id=\"input-phone\"\n                    pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n                    required\n                    onChange={formChangeNumber}\n                    value={number}\n                    />\n                </Label>\n                <BtnSubmit\n                type=\"submit\"\n                >Add Contact</BtnSubmit>\n            </Forma>\n        )\n}\n\n","import styled from '@emotion/styled'\n\nexport const ContactsList = styled.ul`\nlist-style-type:none;\ndisplay:flex;\nflex-direction:column;\ngap:15px;\n`;","import styled from '@emotion/styled'\n\nexport const ContactLi = styled.li`\nborder:2px solid black;\ndisplay:flex;\ngap: 20px;\njustify-content:space-around;\n`;\n\nexport const BtnDelete = styled.button`\npadding:10px;\ncolor:teal;\n`;","import propTypes from 'prop-types'\nimport {ContactLi,BtnDelete} from './Contact.styled'\n\n\nexport const Contact = ({name,number,id,onDeleteContact}) =>{\n    const deleteContact = id => {\n        onDeleteContact(id);\n    };\n\n\n    return(\n        <ContactLi>\n            <p>\n                {name}:{number}\n            </p>\n            <BtnDelete\n            type=\"button\"\n            onClick={()=>{\n                deleteContact(id);\n            }}\n            >Delete</BtnDelete>\n        </ContactLi>\n    )\n\n\n\n}\n\n\nContact.propTypes = {\n    id: propTypes.string.isRequired,\n    name:propTypes.string.isRequired,\n    number:propTypes.string.isRequired,\n    onDeleteContact:propTypes.func.isRequired,\n}","import { ContactsList } from \"./ListContacts.styled\";\nimport { Contact } from \"components/Contact/Contact\";\nimport { deleteContact } from 'redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nexport const ListContacts = () =>{\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectVisibleContacts)\n    const contactsDeleteHandler = idToDelete => {\n        dispatch(deleteContact(idToDelete))\n      }\n        return(\n            <ContactsList>\n                {contacts.map(({name,number,id}) =>{\n                    return(\n                        <Contact\n                        key={id}\n                        id={id}\n                        name={name}\n                        number={number}\n                        onDeleteContact={contactsDeleteHandler}\n                        />\n                    );\n                })}\n            </ContactsList>\n        )\n}\n\n\n","import { Input, Label } from \"components/Form/Form.styled\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filtration = () =>{\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    const handleChange = evt =>{\n        const {value} = evt.target;\n        dispatch(addFilter(value));\n    };\n        return(\n            <>\n            <Label>Find Contacts By Name\n                <Input\n                type=\"text\"\n                id=\"input-search\"\n                onChange={handleChange}\n                name=\"filtration\"\n                value={filter.filter}\n                />\n            </Label>\n            </>\n        )\n}\n","import styled from '@emotion/styled'\n\nexport const Container = styled.div`\n\n`;\n\nexport const FirstTitle = styled.div`\n\n`;\n\nexport const SecondTitle = styled.div`\n\n`;\n\nexport const Breaker = styled.div`\n\n`;\n\nexport const Message = styled.p`\n\n`;","import { Form } from \"../../components/Form/Form\";\nimport { ListContacts } from \"../../components/ListContacts/ListContacts\";\nimport { Filtration } from \"../../components/Filtration/Filtration\";\nimport {Container,\n  FirstTitle,\n  SecondTitle,\n  Breaker,\n  Message,} from '../../components/App.styled';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectContacts, selectVisibleContacts, selectLoading,selectError } from \"redux/selectors\";\nimport { logOut } from \"redux/auth/operations\";\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"redux/operations\";\n\nexport const Contacts =()=> {\n  const contacts = useSelector(selectContacts)\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError)\n  const filteredContacts = useSelector(selectVisibleContacts)\n  const dispatch = useDispatch();\nuseEffect(()=>{\n  dispatch(fetchContacts())\n},[dispatch])\n\n    return(\n      <>\n      \n      <Container>\n        <button onClick={()=>dispatch(logOut())}>Log Out</button>\n        <FirstTitle>Phonebook</FirstTitle>\n        <Form />\n        <SecondTitle>Contacts</SecondTitle>\n        <Breaker>\n          {contacts.items.length > 0 ? (\n            <>\n              <Filtration/>\n              {isLoading&&<p>Loading, wait...</p>}\n              {error&&<p>{error}</p>}\n              {filteredContacts.length > 0?(\n                <ListContacts/>\n            \n          ):(\n            <Message>\n              Sorry, we didn't find any contacts matching your query\n            </Message>\n          )}\n          </>\n          ):(\n            <Message>You don't have any contacts yet</Message>\n          )}\n        </Breaker>\n      </Container>\n      </>\n    );\n};\n\nexport default Contacts;"],"names":["Forma","styled","Label","Input","BtnSubmit","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectFilter","filter","selectVisibleContacts","items","item","toLowerCase","includes","selectLoading","isLoading","selectError","error","Form","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","onSubmit","evt","preventDefault","newContact","sameContact","alert","addContact","type","id","required","onChange","target","pattern","ContactsList","ContactLi","BtnDelete","Contact","onDeleteContact","onClick","deleteContact","ListContacts","contactsDeleteHandler","idToDelete","Filtration","addFilter","Container","FirstTitle","SecondTitle","Breaker","Message","Contacts","filteredContacts","useEffect","fetchContacts","logOut"],"sourceRoot":""}